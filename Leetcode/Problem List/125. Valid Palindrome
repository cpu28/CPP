Question:

A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.







Solution:

class Solution {
public:
    bool isPalindrome(string s) 
    {
        vector<char> lowercase_s;
        int n=s.size();
        for(int i=0;i<n;i++)
        {
            if (s[i]>='A' && s[i]<='Z')
            {
                lowercase_s.push_back( s[i]+32);
            }
            else if(s[i]>='a' && s[i]<='z')
            {
                lowercase_s.push_back(s[i]);
            }
            else if(s[i]>='0' && s[i]<='9')  //include numeric values as well;
            {
                lowercase_s.push_back(s[i]);
            }
        }
        int i=0,e=lowercase_s.size()-1;// here 'e' must be based on new size, not 'n';
        while(i<=e)
        {
            if(lowercase_s[i]!=lowercase_s[e])
            {
                return false;
            }
            i++;
            e--;
        }
        return true;
    }
};
