Question:

class Solution {
public:
    int countPrimes(int n) 
    {
        if(n<=2){return 0;}
        vector<bool> isPrime(n,true); // Assume all numbers are prime initially
        isPrime[0]=isPrime[1]=false;  // 0 and 1 are not prime

        for(int i=2;i<=sqrt(n);i++)
        {
            if(isPrime[i])
            {
                // Mark all multiples of the current prime as non-prime
                for(int j=i*i;j<n;j+=i)
                {
                    isPrime[j]=false;
                }
            }
        }

        // count the prime numbers
        int count=0;
        for(int i=2;i<n;i++)
        {
            if(isPrime[i])
            {
                count++;
            }
        }

        return count;
    }
};





Solution:

class Solution {
public:
    int countPrimes(int n) 
    {
        if(n<=2){return 0;}
        vector<bool> isPrime(n,true); // Assume all numbers are prime initially
        isPrime[0]=isPrime[1]=false;  // 0 and 1 are not prime

        for(int i=2;i<=sqrt(n);i++)
        {
            if(isPrime[i])
            {
                // Mark all multiples of the current prime as non-prime
                for(int j=i*i;j<n;j+=i)
                {
                    isPrime[j]=false;
                }
            }
        }

        // count the prime numbers
        int count=0;
        for(int i=2;i<n;i++)
        {
            if(isPrime[i])
            {
                count++;
            }
        }

        return count;
    }
};
