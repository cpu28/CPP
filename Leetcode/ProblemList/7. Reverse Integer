Question:

Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21


Solution:

class Solution {
public:
    int reverse(int x) 
    {
        int sign,rev=0;  //to store sign of integer,reversed integer
        if(x<0){sign=-1;}
        else{ sign=1;}
        x=abs(x);
        while(x>0)
        {
            if(rev<=INT32_MAX/10)   //checking for integer overflow, execute below if doesn't overflow
            {
                rev=rev*10+x%10;
                x=x/10;
            }
            else{return 0;}    //if overflows then returns 0;
        }
        rev*=sign;
        if(rev<-1*pow(2,32)|| rev>pow(2,31)-1){return 0;}
        else {return rev;}
    }
};
